buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    // for android gradle plugin 3
    google()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:3.4.1"
    classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.7.1"
  }
}

apply from: "$project.rootDir/tools/build-helper.gradle"

apply plugin: 'com.android.application'

apply plugin: 'net.ltgt.errorprone'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "androidx.navigation.safeargs.kotlin"

//def enableErrorProne = true //for sometime always enable errorprone
def enableErrorProne = hasProperty("enableErrorProne")

if (enableErrorProne) {
  apply plugin: "net.ltgt.errorprone"
  tasks.withType(JavaCompile) {
    if (!name.toLowerCase().contains("test")) {
      options.errorprone {
        excludedPaths = ".*/build/generated/.*"
        disableWarningsInGeneratedCode = true
        check("NullAway", CheckSeverity.ERROR)
        //        check("AutoValueImmutableFields", net.ltgt.gradle.errorprone.CheckSeverity.OFF)
        //        check("ClassCanBeStatic", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("MissingOverride", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("UnusedVariable", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("UnnecessaryParentheses", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("ShortCircuitBoolean", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("UnusedMethod", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("OperatorPrecedence", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("InconsistentCapitalization", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("NullableVoid", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("HidingField", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("NullablePrimitive", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
        //        check("StringSplitter", net.ltgt.gradle.errorprone.CheckSeverity.OFF)
        option("NullAway:TreatGeneratedAsUnannotated", "true")
        option("NullAway:ExcludedFieldAnnotations", "butterknife.BindView")
        option("NullAway:AnnotatedPackages", "future")
        option("NullAway:UnannotatedSubPackages",
            "[a-zA-Z0-9.]*.schema,[a-zA-Z0-9.]*.model")
        option("NullAway:CustomInitializerAnnotations", "future.commons.di.CompRoot.getRetrofit")
        option("NullAway:KnownInitializers", "androidx.fragment.app.AppCompatActivity.onCreate")
        option("NullAway:KnownInitializers", "androidx.fragment.app.Fragment.onCreateView")
      }
    }
  }
}

android {

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  compileSdkVersion 28
  defaultConfig {
    applicationId "com.thoughts.emotions"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'androidx.appcompat:appcompat:1.0.2'
  implementation 'androidx.core:core-ktx:1.0.2'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
  implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'

  implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
  implementation "androidx.annotation:annotation:$rootProject.suuportAnnotationVersion"
  implementation "com.google.android.material:material:$rootProject.materialVersion"
  implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
  implementation "androidx.vectordrawable:vectordrawable:$rootProject.vectorDrawableVersion"
  implementation "androidx.cardview:cardview:$rootProject.cardviewVersion"
  implementation "com.airbnb.android:lottie:$rootProject.ext.lottieVersion"
  implementation "com.airbnb.android:epoxy:$rootProject.epoxyVersion"
  implementation 'androidx.recyclerview:recyclerview:1.0.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  annotationProcessor "com.airbnb.android:epoxy-processor:$rootProject.epoxyVersion"
  implementation "com.jakewharton:butterknife:$rootProject.butterknife"
  annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknife"
  implementation "com.facebook.shimmer:shimmer:$rootProject.shimmerVersion"
  implementation "com.airbnb.android:epoxy-paging:$rootProject.epoxyPagingVersion"

  annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'

  //Lifecycle
  implementation "androidx.lifecycle:lifecycle-common:$rootProject.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"

  //Network
  implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
  implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
  implementation "com.squareup.moshi:moshi:$rootProject.moshiVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
  implementation "com.esotericsoftware:kryo:$rootProject.kryoVersion"

  //Auto Value
  api "com.google.auto.value:auto-value-annotations:$rootProject.ext.autoValueVersion"
  annotationProcessor "com.google.auto.value:auto-value:$rootProject.ext.autoValueVersion"

  //    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:0.4.5"
  //    provided "com.ryanharter.auto.value:auto-value-moshi-annotations:0.4.5"

  //Glide
  implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
  implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.glideVersion"
  annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

  implementation "com.jakewharton.timber:timber:$rootProject.timber"

  if (enableErrorProne) {
    errorproneJavac("com.google.errorprone:javac:$rootProject.errorProneJavacVersion")

    annotationProcessor "com.uber.nullaway:nullaway:$rootProject.nullawayVersion"
    errorprone "com.google.errorprone:error_prone_core:$rootProject.errorProneCoreVersion"
  }

  annotationProcessor "com.uber:rave-compiler:$rootProject.raveVersion"
  implementation "com.uber:rave:$rootProject.raveVersion"
}
//show as much as possible java warning, for errorprone
gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxwarns" << "1000"
  }
}
